{"version":3,"sources":["assets/img/logo.png","components/Header/Header.jsx","components/Button/Button.jsx","constants/index.js","components/Cards/CardsEditModal.jsx","components/Cards/CardsItem.jsx","service/index.js","actions/movieAction.js","actions/actionTypes.js","components/Cards/Cards.jsx","reducers/appReducer.js","reducers/index.js","App.js","store/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Button","_ref","onClick","text","concat","words","CardsEditModal","data","handleModalClose","submitChanges","poster_path","id","onSubmit","name","defaultValue","title","type","overview","components_Button_Button","CardsItem","showInfo","Fragment","map","key","ServiceApi","API_KEY","getItems","page","arguments","length","undefined","fetch","this","fetchMovieRequest","fetchMovieSuccess","fetchMovieFailed","error","Cards","state","modalShow","_this","setState","e","results","props","preventDefault","editForm","document","getElementById","element","dataTitle","value","dataDescription","fetchMovies","_this$state","Cards_CardsItem","Cards_CardsEditModal","find","el","Component","connect","movie","dispatch","then","response","status","json","initialState","combineReducers","action","Object","objectSpread","store","middlewares","thunk","createStore","rootReducers","compose","applyMiddleware","apply","window","devToolsExtension","f","configureStore","App","es","components_Header_Header","components_Cards_Cards","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.b96768df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.226be7e0.png\";","import React from 'react';\nimport logo from '../../assets/img/logo.png';\nimport './header.scss';\n\nconst Header = () => (\n  <header>\n    <div className=\"header-line\">\n      <img src={logo} alt=\"Logo\" />\n    </div>\n    <div className=\"header-bootom-line search\" />\n  </header>\n);\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick, text,className }) => (\n  <button onClick={onClick} className={`short-card__link short-card__link${className}`} >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired\n}\n\nexport default Button;\n","export const words = {\n    save: 'СОХРАНИТЬ',\n    exit: 'ВЫЙТИ',\n    edit: 'РЕДАКТИРОВАТЬ'\n}","import React from 'react';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\nimport { words } from '../../constants';\n\nconst CardsEditModal = ({ data, handleModalClose, submitChanges }) => (\n  <div className=\"modal\">\n    <div className=\"modal-content\">\n      <span onClick={handleModalClose} className=\"close\">\n        &times;\n      </span>\n      <div className=\"short-card-wrapper\">\n        {data.poster_path && (\n          <div className=\"short-card__img\">\n             <img src={`https://image.tmdb.org/t/p/w185/${data.poster_path}`} alt=\"img\" />\n          </div>\n        )}\n        <div className=\"short-card__info\">\n          <form id=\"editForm\" onSubmit={submitChanges}>\n              <input name=\"dataTitle\" defaultValue={data.title} type=\"text\" />\n              <textarea\n                name=\"dataDescription\"\n                defaultValue={data.overview}\n                type=\"text\"\n              />\n            <Button onClick={submitChanges} text={words.save} className={'--margin'}/>\n            <Button onClick={handleModalClose} text={words.exit} />\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nCardsEditModal.propTypes = {\n  data: PropTypes.object.isRequired,\n  handleModalClose: PropTypes.func,\n  submitChanges: PropTypes.func\n}\n\nexport default CardsEditModal;\n","import React from 'react';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\nimport { words } from '../../constants';\n\nconst CardsItem = ({ data, showInfo }) => (\n  <>\n    {data.map(data => (\n      <div key={data.id} className=\"short-card-wrapper\">\n        <div className=\"short-card__img\">\n          <img src={`https://image.tmdb.org/t/p/w185/${data.poster_path}`} alt=\"img\" />\n        </div>\n        <div className=\"short-card__info\">\n          <h2 className=\"short-card__title\">{data.title}</h2>\n          <p className=\"short-card__description\">{data.overview}</p>\n          <div className=\"short-card__controls\">\n            <Button onClick={() => showInfo(data.id)} text={words.edit} />\n          </div>\n        </div>\n      </div>\n    ))}\n  </>\n);\n\nCardsItem.propTypes = {\n  data: PropTypes.array.isRequired,\n  showInfo: PropTypes.func\n};\n\nexport default CardsItem;\n\n","const ServiceApi = {\n  API_KEY: 'b4a2ddcffbf736c3e738a03f5fcc609c',\n\n  getItems (page = 0) {\n    return fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${this.API_KEY}&language=ru-RU&page=${page || 1}`)\n  }\n}\n\nexport default ServiceApi;","import * as actionTypes from './actionTypes';\nimport ServiceApi from '../service';\n\n\nexport const fetchMovies = () => {\n  return dispatch => {\n    dispatch(fetchMovieRequest());\n    return ServiceApi.getItems().then(response => {\n      if (response.status === 200) {\n        response.json().then(data => {\n          dispatch(fetchMovieSuccess(data.results));\n        });\n      } else {\n        response.json().then(error => {\n          dispatch(fetchMovieFailed(error));\n        });\n      }\n    });\n  };\n};\n\nexport const fetchMovieRequest = () => {\n  return {\n    type: actionTypes.NEW_MOVIE_REQUEST,\n  };\n};\n\nexport const fetchMovieSuccess = (data) => {\n  return {\n    type: actionTypes.FETCH_MOVIE_SUCCESS,\n    data\n  };\n};\n\nexport const fetchMovieFailed = error => {\n  return {\n    type: actionTypes.FETCH_MOVIE_FAILED,\n    error,\n  };\n};","export const NEW_MOVIE_REQUEST = 'NEW_MOVIE_REQUEST';\nexport const FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS';\nexport const FETCH_MOVIE_FAILED = 'FETCH_MOVIE_FAILED';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CardsEditModal from './CardsEditModal';\nimport CardsItem from './CardsItem';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../../actions/movieAction';\nimport './card.scss';\n\nclass Cards extends Component {\n  state={\n    id:'',\n    modalShow: false\n  }\n  componentDidMount(){\n    this.props.fetchMovies();\n  }\n\n  showInfo = id => {\n    this.setState({\n      modalShow: true,\n      id\n    });\n  };\n\n  handleModalClose = () => {\n    this.setState({\n      modalShow: false\n    });\n  };\n\n  submitChanges = e => {\n    const { id } = this.state;\n    const {results} = this.props;\n\n    e.preventDefault();\n    const editForm = document.getElementById('editForm');\n    results.map(element => {\n      if (element.id === id) {\n        element.title = editForm.dataTitle.value;\n        element.overview = editForm.dataDescription.value;\n      }\n      return null;\n    });\n    this.handleModalClose();\n  };\n\n  render() {\n    const {results} = this.props;\n    const {id, modalShow} = this.state;\n    return (\n      <>\n        {results ? <CardsItem data={results} showInfo={this.showInfo}/> : <div>Loading ... </div>} \n        {modalShow && (\n          <CardsEditModal\n            handleModalClose={this.handleModalClose}\n            submitChanges={this.submitChanges}\n            data={results.find(el => el.id === id)}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nCards.propTypes = {\n  results: PropTypes.array.isRequired,\n  fetchMovies: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {\n    results: state.movie.results,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMovies: () => dispatch(fetchMovies()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cards);","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    results:[]\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MOVIE_SUCCESS:\n      return {\n        ...state,\n        results: action.data\n      };\n\n    case actionTypes.FETCH_MOVIE_FAILED:\n      return {\n        ...state\n      };\n\n    default:\n      return initialState;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { appReducer } from './appReducer';\n\nexport default combineReducers({\n  movie: appReducer\n});","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Cards from './components/Cards/Cards';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport './App.css';\n\nconst store = configureStore();\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store={store}>\n          <Header />\n          <Cards />\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers';\n\nexport default function configureStore() {\n  const middlewares = [thunk];\n\n  const store = createStore(\n    rootReducers,\n    compose(\n      applyMiddleware(...middlewares),\n      window.devToolsExtension ? window.devToolsExtension() : f => f // add support for Redux dev tools\n    )\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}